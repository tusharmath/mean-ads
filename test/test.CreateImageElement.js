// Generated by CoffeeScript 1.9.1
var CreateImageElement, Injector, WindowProvider;

CreateImageElement = require('../backend/sdk/CreateImageElement');

WindowProvider = require('../backend/providers/WindowProvider');

Injector = require('di').Injector;

describe("CreateImageElement", function() {
  beforeEach(function() {
    this.injector = new Injector;
    this.mod = this.injector.get(CreateImageElement);
    this.img = {};
    this.window = {
      document: {
        createElement: sinon.stub().returns(this.img)
      }
    };
    this.windowP = this.injector.get(WindowProvider);
    return sinon.stub(this.windowP, 'window').returns(this.window);
  });
  return describe("create()", function() {
    it("creates an image element", function() {
      this.mod.create('http://abs.com');
      return this.window.document.createElement.calledWith('img').should.be.ok;
    });
    it("does not call the callback", function() {
      this.mod.create('http://abs.com');
      return expect((function(_this) {
        return function() {
          return _this.img.onload();
        };
      })(this)).to.not["throw"]();
    });
    return it("calls the callback", function() {
      var callback;
      this.mod.create('http://abs.com', callback = sinon.spy());
      this.img.onload();
      return callback.called.should.be.ok;
    });
  });
});
