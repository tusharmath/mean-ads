// Generated by CoffeeScript 1.9.1
var CommandExecutor, ConvertCommand, CreateImageElement, HostNameBuilder, HttpProvider, HttpProviderMock, Injector;

ConvertCommand = require('../backend/sdk/ConvertCommand');

CommandExecutor = require('../backend/sdk/CommandExecutor');

HostNameBuilder = require('../backend/sdk/HostNameBuilder');

HttpProvider = require('../backend/sdk/HttpProvider');

HttpProviderMock = require('./mocks/HttpProviderMock');

CreateImageElement = require('../backend/sdk/CreateImageElement');

Injector = require('di').Injector;

describe("ConvertCommand", function() {
  beforeEach(function() {
    this.injector = new Injector([HttpProviderMock]);
    this.mod = this.injector.get(ConvertCommand);
    this.hostName = this.injector.get(HostNameBuilder);
    sinon.stub(this.hostName, 'getHostWithProtocol').returns('shit://mean-ads.io');
    this.img = this.injector.get(CreateImageElement);
    sinon.stub(this.img, 'create');
    this.http = this.injector.get(HttpProvider);
    sinon.spy(this.http, 'get');
    return this.exec = this.injector.get(CommandExecutor);
  });
  describe("constructor()", function() {
    return it("should register on cmdexec", function() {
      return this.exec._executables['convert'].should.exist;
    });
  });
  describe("execute()", function() {
    beforeEach(function() {
      this.subscriptionId = 'YGjrB1ObFS';
      return sinon.stub(this.mod, '_getUrl').returns('fake-http-url');
    });
    it("be a function", function() {
      return this.mod.execute.should.be.a.Function;
    });
    it("returns null if program is empty", function() {
      return expect(this.mod.execute()).to.equal(null);
    });
    return it("create image", function() {
      this.mod.execute(this.subscriptionId);
      return this.img.create.calledWith('fake-http-url').should.be.ok;
    });
  });
  return describe("_getUrl()", function() {
    return it("creates query params with both p and k", function() {
      return this.mod._getUrl(1000).should.equal('shit://mean-ads.io/api/v1/subscription/1000/convert.gif');
    });
  });
});
