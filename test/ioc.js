// Generated by CoffeeScript 1.9.1
var Injector, MochaSuite, MongooseProvider, MongooseProviderMock, _;

Injector = require('di').Injector;

MochaSuite = require('mocha/lib/suite');

MongooseProviderMock = require('./mocks/MongooseProviderMock');

MongooseProvider = require('../backend/providers/MongooseProvider');

_ = require('lodash');

exports.resolve = function(path, _options) {
  var Module, afterEach, injector, mocks, mod, mongo, options;
  options = {
    mockDb: true,
    basePath: '../backend/'
  };
  _.assign(options, _options);
  path = options.basePath + path.replace('.', '/');
  Module = require(path);
  mocks = options.mockDb ? [MongooseProviderMock] : [];
  injector = new Injector(mocks);
  mod = injector.get(Module);
  mongo = injector.get(MongooseProvider);
  afterEach = function() {
    return mongo.__reset();
  };
  return {
    bindOn: function(context) {
      return _.assign(context, {
        mod: mod,
        afterEach: afterEach,
        mongo: mongo
      });
    }
  };
};
