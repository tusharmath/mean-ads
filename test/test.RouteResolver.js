// Generated by CoffeeScript 1.9.1
var Injector, RouteResolver, ioc;

RouteResolver = require('../backend/modules/RouteResolver');

ioc = require('./ioc');

Injector = require('di').Injector;

describe('RouteResolver:', function() {
  beforeEach(function() {
    return ioc.resolve('modules.RouteResolver').bindOn(this);
  });
  afterEach(function() {
    return this.afterEach();
  });
  describe("_forEveryAction()", function() {
    beforeEach(function() {
      sinon.stub(this.mod, '_actionBinder');
      return this.controllers = {
        ctrl1: {
          actions: {
            $a: function() {}
          }
        }
      };
    });
    it("calls _actionBinder actions", function() {
      this.mod._forEveryAction({}, this.controllers);
      return this.mod._actionBinder.called.should.be.ok;
    });
    return it("ignores _actionBinder actions", function() {
      this.controllers = {
        ctrl1: {
          actions: {
            $a: null
          }
        }
      };
      this.mod._forEveryAction({}, this.controllers);
      return this.mod._actionBinder.called.should.be["false"];
    });
  });
  return describe("_resolveRoute()", function() {
    it("throws if actions not defined", function() {
      var actionName, ctrl;
      ctrl = {};
      actionName = 'sample-name';
      return expect((function(_this) {
        return function() {
          return _this.mod._resolveRoute(ctrl, 'Apple', actionName);
        };
      })(this)).to.Throw('actions have not been set for controller: Apple');
    });
    return it("throws if actionMap not defined", function() {
      var actionName, ctrl;
      ctrl = {
        actions: {}
      };
      actionName = 'sample-name';
      return expect((function(_this) {
        return function() {
          return _this.mod._resolveRoute(ctrl, 'Apple', actionName);
        };
      })(this)).to.Throw('actionMap has not been set for action: Apple: sample-name');
    });
  });
});
