// Generated by CoffeeScript 1.9.1
var app,
  slice = [].slice;

app = angular.module('mean-ads', ['ngRoute', 'restangular', 'mean.core', 'auth0', 'angular-jwt', 'angular-storage']).run([
  'auth', '$rootScope', '$location', function(auth, $rootScope, $location) {
    auth.hookEvents();
    return $rootScope.$on('unauthenticated', function() {
      return $location.path('/login');
    });
  }
]).config([
  '$routeProvider', '$locationProvider', '$httpProvider', 'RestangularProvider', 'RouteResolverProvider', 'authProvider', 'jwtInterceptorProvider', function() {
    var $httpProvider, $locationProvider, $routeProvider, _routeResolver, args, authProvider, jwtInterceptorProvider, restProvider, routeResolver;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    $routeProvider = args[0], $locationProvider = args[1], $httpProvider = args[2], restProvider = args[3], routeResolver = args[4], authProvider = args[5], jwtInterceptorProvider = args[6];
    authProvider.init({
      domain: 'mean-ads.auth0.com',
      clientID: '6zvBZ3dG9XJl8zre9bCpPNTTxozUShX7'
    });
    $httpProvider.interceptors.push('AjaxPendingRequests');
    $httpProvider.interceptors.push('jwtInterceptor');
    jwtInterceptorProvider.tokenGetter = [
      'store', function(store) {
        return store.get('token');
      }
    ];
    restProvider.setBaseUrl('/api/v1/core');
    restProvider.setDefaultHttpFields({
      cache: false
    });
    restProvider.setRestangularFields({
      id: '_id'
    });
    _routeResolver = _.curry(routeResolver.resolve, 2)($routeProvider);
    _routeResolver('Dashboard');
    _routeResolver('Login', {
      requiresLogin: false
    });
    _routeResolver('Program', {
      actions: ['Create', 'Update', 'List', 'Snippet']
    });
    _routeResolver('Campaign', {
      actions: ['Create', 'Update', 'List', 'Metrics']
    });
    _routeResolver('Subscription', {
      actions: ['Create', 'Update', 'List', 'Metrics']
    });
    _routeResolver('Style', {
      actions: ['Create', 'Update', 'List']
    });
    $routeProvider.otherwise({
      redirectTo: '/subscriptions'
    });
    return $locationProvider.html5Mode(false);
  }
]);

module.exports = app;
