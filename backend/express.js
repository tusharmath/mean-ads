// Generated by CoffeeScript 1.9.1
var ModelFactory, V1, api, bodyParser, config, cookieParser, dev, di, express, humanize, injector, middleware, newrelic, packageFile, path, prod;

config = require('./config/config');

dev = require('./config/express-dev');

express = require('express');

middleware = require('./middleware');

path = require('path');

prod = require('./config/express-prod');

bodyParser = require('body-parser');

api = require('./modules/RouteResolver');

di = require('di');

newrelic = require('newrelic');

ModelFactory = require('./factories/ModelFactory');

packageFile = require('../package.json');

cookieParser = require('cookie-parser');

humanize = require('humanize');

V1 = (function() {
  function V1(api) {
    var app, env, v1;
    v1 = api.router();
    app = express();
    app.locals.newrelic = newrelic;
    app.locals["package"] = packageFile;
    app.locals.config = config;
    app.locals.humanize = humanize;
    app.set('views', config.root + "/frontend").set('view engine', 'jade');
    env = app.get('env');
    if (env === 'development') {
      dev(app);
    }
    if (env === 'production') {
      prod(app);
    }
    app.use(cookieParser(config.cookie.secret)).use('/static', [middleware.stylus, express["static"](path.join(config.root, 'frontend'))]).use('/api/v1/core', [middleware.auth]).use('/api/v1/dispatch', [middleware.uuid]).use('/api/v1', [bodyParser.json(), v1]).get('/templates/*', middleware.partials).get('/', middleware.page('index')).all('/*', middleware.page('404'));
    app.listen(config.port, config.ip, function() {
      return bragi.log('application', bragi.util.symbols.success, 'Server Started', bragi.util.print(config.ip + ":" + config.port, 'yellow'), 'in', bragi.util.print("" + (app.get('env')), 'yellow'), 'mode');
    });
  }

  return V1;

})();

di.annotate(V1, new di.Inject(api, ModelFactory));

injector = new di.Injector();

injector.get(V1);
