// Generated by CoffeeScript 1.9.1
var coffeeMiddleware, config, express, favicon, jwt, jwtCheck, nodeUuid, path, stylus;

coffeeMiddleware = require('coffee-middleware');

nodeUuid = require('node-uuid');

config = require('./config/config');

express = require('express');

favicon = require('static-favicon');

jwt = require('express-jwt');

path = require('path');

path = require('path');

stylus = require('stylus');

jwtCheck = jwt({
  secret: new Buffer(config.jwt.secret, 'base64'),
  audience: config.jwt.clientId
});

exports.auth = function(req, res, next) {
  var _next;
  _next = function(err) {
    if (req.user) {
      return next();
    }
    return res.status(401).send(err);
  };
  return jwtCheck(req, res, _next);
};

exports.coffeescript = coffeeMiddleware({
  compress: config.coffeeCompress,
  src: path.join(config.root, 'frontend')
});

exports.stylus = stylus.middleware({
  force: config.stylus.forceCompile,
  src: path.join(config.root, 'frontend/stylus'),
  dest: path.join(config.root, 'frontend/css')
});

exports.partials = function(req, res) {
  var requestedView, stripped;
  stripped = req.url.split('.')[0];
  requestedView = path.join('./', stripped);
  return res.render(requestedView, function(err, html) {
    if (err) {
      console.log("Error rendering partial " + requestedView + "\n", err);
      return res.status(404).render('404');
    } else {
      return res.send(html);
    }
  });
};

exports.page = function(page) {
  return function(req, res) {
    var status;
    status = parseInt(page, 10);
    if (isNaN(status)) {
      status = 200;
    }
    return res.status(status).render(page);
  };
};

exports.uuid = function(req, res, next) {
  var maxAge, uuid;
  uuid = req.cookies._uuid || nodeUuid.v4();
  maxAge = config.uuidMaxAge;
  res.cookie('_uuid', uuid, {
    maxAge: maxAge
  });
  req.user = req.user || {};
  req.user.uuid = uuid;
  return next();
};
